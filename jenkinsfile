
pipeline {
    agent any
    tools {
        maven 'Maven'
    }
    // triggers {
    //     // polls the scm every5 mins
    //     pollSCM ('5 * * * *')
    //     //builds the piepline periodcally every day 3 clock
    //     cron ('0 16 * * *')
    // }
   environment {
       SCANNER_HOME = tool 'sonarqube-scanner'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Yaswanth270/java-web-app.git'
            }
        }
        }
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('Code Analysis') {
            steps {
                withSonarQubeEnv('sonarqube-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=java-web-app \
                        -Dsonar.java.binaries=. \
                        -Dsonar.projectKey=java-web-app'''
                }
            }
        }
 stage('docker-stage-clear') {
          steps {
              sh 'docker stop $(docker ps -q) || true'
              sh 'docker rm $(docker ps -aq) || true'
              sh 'docker rmi $(docker images -q) || true'
           }
        }

        stage('Build') {
            steps {
                sh 'mvn install'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh'docker build -t /yaswanth270java-image-latest-1 .'
            }
        }
         stage('docker push') {
          steps {
            script {
              withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                sh 'docker push yaswanth270/java-image-latest-1'
                }
              }
            }
          }

        stage('Run Docker Container') {
            steps {
                sh 'docker run -itd --name java-container -p 8082:8080 yaswanth270/java-image-latest-1'
            }
        }
    }

    post {
        success {
            echo 'Slack Notification: Build Success'
            slackSend channel: '#ci-cd-project-jenkins', message: 'Build success', color: 'good'
        }
        failure {
            echo 'Slack Notification: Build Failure'
            slackSend channel: '#ci-cd-project-jenkins', message: 'Build failed', color: 'danger'
        }
    }
